{"ast":null,"code":"import API from \"../../API\";\nimport { addCartAction, increaseCartAction, decreaseCartAction, fetchCartAction } from \"./actions\";\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\nexport const fetchFromLocalStorage = () => {\n  return async dispatch => {\n    let cartsJSON = localStorage.getItem(CARTS_KEY);\n    let carts = {};\n\n    if (cartsJSON) {\n      carts = JSON.parse(cartsJSON);\n    }\n\n    const subtotal = calculateSubtotal(carts);\n    dispatch(fetchCartAction(carts, subtotal));\n  };\n};\nexport const addCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    prevCarts[item.id] = {\n      \"item\": item,\n      \"selected_count\": 1\n    };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(addCartAction(prevCarts, subtotal));\n  };\n};\nexport const increaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count + 1;\n    prevCarts[item.id] = {\n      \"item\": item,\n      \"selected_count\": nextSelectedCount\n    };\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(increaseCartAction(prevCarts, subtotal));\n  };\n};\nexport const decreaseCart = item => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n\n    if (nextSelectedCount > 0) {\n      prevCarts[item.id] = {\n        \"item\": item,\n        \"selected_count\": nextSelectedCount\n      };\n    } else {\n      delete prevCarts[item.id];\n    }\n\n    const subtotal = calculateSubtotal(prevCarts);\n    setToLocalStorage(prevCarts);\n    dispatch(decreaseCartAction(prevCarts, subtotal));\n  };\n};\n\nconst setToLocalStorage = carts => {\n  localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n};\n\nconst calculateSubtotal = carts => {\n  let subtotal = 0;\n  console.log(carts);\n\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].selected_count;\n  }\n\n  return subtotal;\n};","map":{"version":3,"sources":["/Users/techi.s./Desktop/Techis-Replit-QuickStart-Template/frontend/src/reducks/cart/operations.js"],"names":["API","addCartAction","increaseCartAction","decreaseCartAction","fetchCartAction","api","CARTS_KEY","fetchFromLocalStorage","dispatch","cartsJSON","localStorage","getItem","carts","JSON","parse","subtotal","calculateSubtotal","addCart","item","getState","prevCarts","list","id","setToLocalStorage","increaseCart","nextSelectedCount","selected_count","decreaseCart","setItem","stringify","console","log","key","Number","price"],"mappings":"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","sourcesContent":["import API from \"../../API\";\nimport { addCartAction, increaseCartAction, decreaseCartAction, fetchCartAction } from \"./actions\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchFromLocalStorage=()=>{\n    return async (dispatch)=>{\n        let cartsJSON= localStorage.getItem(CARTS_KEY);\n        let carts = {};\n        if (cartsJSON){\n            carts= JSON.parse(cartsJSON);\n        }\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartAction(carts, subtotal))\n\n    }\n}\n\nexport const addCart = (item)=>{\n    return async (dispatch, getState)=>{\n        let prevCarts= getState().carts.list\n        prevCarts[item.id] = {\"item\": item, \"selected_count\": 1};\n        const subtotal = calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n\n    }\n}\n\nexport const increaseCart=(item)=>{\n    return async (dispatch, getState)=>{\n        let prevCarts=getState().carts.list\n        let nextSelectedCount= prevCarts[item.id].selected_count + 1;\n        prevCarts[item.id] = {\"item\":item, \"selected_count\": nextSelectedCount}\n        const subtotal = calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal))\n\n    }\n}\n\nexport const decreaseCart = (item)=> {\n    return async (dispatch, getState)=>{\n        let prevCarts = getState().carts.list\n        let nextSelectedCount = prevCarts[item.id].selected_count - 1;\n        if (nextSelectedCount>0){\n            prevCarts[item.id] = {\"item\": item, \"selected_count\": nextSelectedCount};\n        } else {\n            delete prevCarts[item.id];\n        }\n        const subtotal= calculateSubtotal(prevCarts);\n        setToLocalStorage(prevCarts);\n        dispatch(decreaseCartAction(prevCarts, subtotal))\n    }\n}\n\nconst setToLocalStorage = (carts) => {\n    localStorage.setItem(CARTS_KEY, JSON.stringify(carts));\n    \n}\n\nconst calculateSubtotal = (carts)=>{\n    let subtotal = 0;\n    console.log(carts);\n\n    for ( let key in carts){\n        subtotal +=(Number(carts[key].item.price)* carts[key].selected_count);\n\n    }\n    return subtotal;\n}"]},"metadata":{},"sourceType":"module"}